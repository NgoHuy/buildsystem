#!/bin/bash

# Maintainer: Anh K. Huynh <kyanh@theslinux.org>
# Original Maintainer: Gaetan Bisson <bisson@archlinux.org>
# Original Contributor: damir <damir@archlinux.org>

pkgname=uim-vi
pkgver=1.8.5
pkgrel=1
pkgdesc='Vietnamese input method library'
url='http://code.google.com/p/uim/'
license=('custom:BSD')
arch=('i686' 'x86_64')
depends=('libxft' 'libedit' 'm17n-lib')
# FIXME: We need ruby to run some script. However, if we are using `rvm
# FIXME: we have no way to tell the system to skip the dependency check
# FIXME: We may add a new check in `makepkg to just ensure that some
# FIXME: binary files do exist that makes sense
makedepends=('intltool' 'gettext' 'qt4' 'gtk2' 'gtk3')
optdepends=('qt4: immodule and helper applications'
            'gtk2: immodule and helper applications'
            'gtk3: immodules and helper applications')
options=('!libtool')

# FIXME: The files from `scim2uim` should be downloaded every time
# FIXME: we compile the package. This is to get the latest update
# FIXME: from the upstream repository.
#
# FIXME: We also needs a way to track the change's number from the
# FIXME: external source. If a package requires multiple source,
# FIXME: how can we provide package version number? In factr, Arch is
# FIXME: using `pkgrel` to support this. That forces us not to use
# FIXME: the `master` works from `mysquartz-scim2uim` like this.
source=("uim-vi.patch"
        "https://raw.github.com/icy/myquartz-scim2uim/master/bin/scim2uim.rb"
        "https://raw.github.com/icy/myquartz-scim2uim/master/src/Telex.txt.in"
        "https://raw.github.com/icy/myquartz-scim2uim/master/src/VNI.txt.in"
        "https://raw.github.com/icy/myquartz-scim2uim/master/icons/telex.png"
        "https://raw.github.com/icy/myquartz-scim2uim/master/icons/telex.svg"
        "https://raw.github.com/icy/myquartz-scim2uim/master/icons/vni.png"
        "https://raw.github.com/icy/myquartz-scim2uim/master/icons/vni.svg"
        "http://uim.googlecode.com/files/uim-${pkgver}.tar.gz")
sha1sums=()

provides=('uim')
conflicts=('uim')
replaces=('uim')

install=install

build() {
	cd "${srcdir}/uim-${pkgver}"

	ruby "${srcdir}/scim2uim.rb" --telex \
		< "${srcdir}/Telex.txt.in" \
		> "./scm/xtelex.scm"
	ruby "${srcdir}/scim2uim.rb" --vni \
		< "${srcdir}/VNI.txt.in" \
		> "./scm/xvni.scm"

	for _file in telex.png telex.svg vni.png vni.svg; do
		[[ -f "./pixmaps/${_file}" ]] \
		|| ln -s "${srcdir}/${_file}" "./pixmaps/x${_file}"
	done

	patch -Np4 < "${srcdir}/uim-vi.patch"
	./autogen.sh
	./configure \
		--prefix=/usr \
		--libexecdir=/usr/lib/uim \
		--without-anthy \
		--with-qt4-immodule \
		--with-qt4 \
		--disable-gnome-applet \
		--disable-dict \
		--without-skk \
		--without-mana \
		--without-prime \
		--without-sj3 \
		--without-scim \
		--without-eb \
		--without-osx-dcs \
		--without-sqlite3

	make
}

package() {
	cd "${srcdir}/uim-${pkgver}"
	make DESTDIR="${pkgdir}" install
	rm "${pkgdir}"/usr/lib/libgcroots.a
	install -D -m644 COPYING "${pkgdir}/usr/share/licenses/uim/COPYING"
	ln -s uim-pref-gtk "${pkgdir}/usr/bin/uim-setup"
}
